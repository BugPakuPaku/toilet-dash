# .github/workflows/ci.yaml

name: CI

env:
    VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
    VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on: push

jobs:
    test:
      runs-on: ubuntu-latest
      defaults:
        run:
          working-directory: toilet-dash
      steps:
        - name: checkout
          uses: actions/checkout@v3
      
        - name: setup-node
          uses: actions/setup-node@v3
          with:
            node-version: 20.15.1
            cache: npm
            cache-dependency-path: toilet-dash/package-lock.json
          
        - name: cache-node-modules
          uses: actions/cache@v3
          id: node_modules_cache_id
          env:
            cache-name: cache-node-modules
          with:
            path: toilet-dash/node_modules
            key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('toilet-dash/package-lock.json') }}
          
        - name: npm-install
          run: npm i
          
        - name: app-build
          run: npm run build
          
        - name: actions-status-discord
          uses: sarisia/actions-status-discord@v1.14.5
          if: always()
          with:
            webhook: ${{ secrets.DISCORD_WEBHOOK }}

    preview:
      if: ${{ github.ref != 'refs/heads/release' }}
      needs: test
      runs-on: ubuntu-latest
      environment:
          name: preview
          url: ${{ steps.deploy.outputs.url }}
      steps:
          - uses: actions/checkout@v3

          - name: Setup node
            uses: actions/setup-node@v3
            with:
                  node-version: 18
                  check-latest: true

          - name: Install Vercel CLI
            run: npm install --global vercel@latest

          - name: Pull Vercel Environment Information
            run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

          - name: Build Project Artifacts
            run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

          - name: Deploy Project Artifacts to Vercel
            id: deploy
            run: echo "url=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})" >> $GITHUB_OUTPUT

          - name: Assign staging domain to deployment (if main branch)
            if: ${{ github.ref == 'refs/heads/main' }}
            run: vercel alias ${{ steps.deploy.outputs.url }} stg.my-service.com --scope=my-team --token=${{ secrets.VERCEL_TOKEN }}

    prod:
      if: ${{ github.ref == 'refs/heads/release' }}
      needs: test
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
      
        - name: Setup node
          uses: actions/setup-node@v3
          with:
            node-version: 18
            check-latest: true
          
        - name: Install Vercel CLI
          run: npm install --global vercel@latest
          
        - name: Pull Vercel Environment Information
          run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
          
        - name: Build Project Artifacts
          run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
          
        - name: Deploy Project Artifacts to Vercel
          run: vercel deploy --prod --prebuilt --token=${{ secrets.VERCEL_TOKEN }}